
spring:
  profiles:
    active: "@spring.active@"
  servlet:
    multipart:
      # 单个文件最大限制
      max-file-size: 3MB
      # 多个文件最大限制
      max-request-size: 20MB
  session:
    store-type: redis
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keep-alive: true
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM user
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      # 要启用PSCache, 必须配置大于0
      max-open-prepared-statements: 40
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: "com.springboot.template.dao.*"
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,slf4j
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      filter:
        # 开启druiddatasource的状态监控
        stat:
          enabled: true
          db-type: mysql
          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 2000
      # 配置 DruidStatFilter
      web-stat-filter:
        # 启用http://localhost:8080/druid/login.html
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        url-pattern: /druid/*
        # IP 白名单，没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
        # IP 黑名单，若白名单也存在，则优先使用
        #deny: 192.168.31.253
        # 禁用 HTML 中 Reset All 按钮
        reset-enable: false
        # 登录用户名/密码
        login-username: root
        login-password: 123456
        # 需要设置enabled=true,否则会报出There was an unexpected error (type=Not Found, status=404).错误，或者将druid-spring-boot-starter的版本降低到1.1.10及以下
        # 是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
        enabled: true

  redis:
    host: ${spring.redis.host}
    port: ${spring.redis.port}
    password: ${spring.redis.password}
    database: ${spring.redis.database}
    lettuce:
      pool:
        #连接池中的最大空闲连接
        max-idle: 20
        #连接池中的最小空闲连接
        min-idle: 0
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 30000
        #连接池最大连接数（使用负值表示没有限制）
        max-active: 100
    timeout: 3000
  jackson:
    # 时区
    time-zone: Asia/Shanghai
    # 地区
    locale: CHIAN
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      # 格式化输出
      indent-output: true
      # 忽略无法转换的对象
      fail-on-empty-beans: false
    # 如何序列化
    #default-property-inclusion: non_null
    deserialization:
      # 允许对象忽略json中不存在的属性
      fail-on-unknown-properties: false
    parser:
      # 允许出现特殊字符和转义符
      allow-unquoted-control-chars: true
      # 允许出现单引号
      allow-single-quotes: true



mybatis-plus:
  type-aliases-package: com.echo.mall.user.entity
  global-config:
    # 是否打印mybatis-plus的log
    banner: false
    db-config:
      # id类型
      id-type: auto
      # 已删除
      logic-delete-value: 1
      # 未删除
      logic-not-delete-value: 0
  mapper-locations:
    - classpath*:com/echo/mall/user/**/*.xml
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 线程池配置
task:
  pool:
    # 线程池前缀
    prefix: user-
    # 线程核心数
    core-size: 10
    # 最大线程数
    max-size: 100
    # 缓冲队列
    queue-capacity: 10000
    # 线程的空闲时间
    keep-alive: 60
    # 允许核心线程超时
    allow-core-thread-timeout: true
    # 等待任务在关闭时完成
    wait-Shutdown: true